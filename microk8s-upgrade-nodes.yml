- name: Upgrade MicroK8s Nodes Sequentially
  hosts: all
  become: yes
  serial: 1  # Process one node at a time
  tasks:
    - name: Check if an update is available for MicroK8s
      command: snap refresh --list
      register: refresh_list
      changed_when: "'microk8s' in refresh_list.stdout"

    - name: Skip node tasks if no update is available
      debug:
        msg: "No update available for MicroK8s on {{ inventory_hostname }}"
      when: "'microk8s' not in refresh_list.stdout"
      tags:
        - skip

    - name: Cordon the node to prevent scheduling new pods
      shell: microk8s kubectl cordon {{ inventory_hostname }}
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      register: cordon_status
      when: "'microk8s' in refresh_list.stdout"

    - name: Verify the node is cordoned
      shell: microk8s kubectl get nodes | grep {{ inventory_hostname }}
      register: node_status
      failed_when: "'SchedulingDisabled' not in node_status.stdout"
      when: "'microk8s' in refresh_list.stdout"

    - name: Drain the node
      shell: microk8s kubectl drain {{ inventory_hostname }} --ignore-daemonsets --delete-emptydir-data
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      when: "'microk8s' in refresh_list.stdout"

    - name: Upgrade MicroK8s
      command: snap refresh microk8s
      when: "'microk8s' in refresh_list.stdout"

    - name: Wait for MicroK8s to restart
      shell: microk8s status --wait-ready
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      when: "'microk8s' in refresh_list.stdout"

    - name: Uncordon the node to allow scheduling new pods
      shell: microk8s kubectl uncordon {{ inventory_hostname }}
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      when: "'microk8s' in refresh_list.stdout"

    - name: Verify the node is uncordoned
      shell: microk8s kubectl get nodes | grep {{ inventory_hostname }}
      register: uncordon_status
      when: "'microk8s' in refresh_list.stdout"

    - name: Check the upgraded MicroK8s version
      shell: microk8s --version
      register: upgraded_version
      when: "'microk8s' in refresh_list.stdout"

    - name: Display upgraded version
      debug:
        msg: "Node {{ inventory_hostname }} upgraded to MicroK8s version: {{ upgraded_version.stdout }}"
      when: "'microk8s' in refresh_list.stdout"

